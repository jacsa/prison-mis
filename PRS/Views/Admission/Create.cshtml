@using BootstrapSupport
@model PRS.Models.Admission 
@{
    ViewBag.Title = "Admit Prisoner"; 
}
<h3>@ViewBag.Title</h3> 

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <fieldset class="form-horizontal">
        
        @Html.Hidden("PrisonerId", Request["PrisonerId"])
        @Html.HiddenFor(model => model.IsActive)

        <div class="control-group"> @Html.LabelFor(model => model.DateOfAdmission, new { @class = "control-label" })
			<div class="controls">
				<input type="text" name="DateOfAdmission" class="datepicker" data-date-format="dd-M-yyyy" value="@Html.DisplayFor(model => model.DateOfAdmission)">
				@Html.ValidationMessageFor(model => model.DateOfAdmission, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.PrisonerNumber, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.PrisonerNumber)
				@Html.ValidationMessageFor(model => model.PrisonerNumber, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group">
			@Html.LabelFor(model => model.Barrack, new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownList("BarrackId", "-- Select Barrack --")
				@Html.ValidationMessageFor(model => model.BarrackId, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.BlockNumber, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.BlockNumber)
				@Html.ValidationMessageFor(model => model.BlockNumber, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.CellNumber, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.CellNumber)
				@Html.ValidationMessageFor(model => model.CellNumber, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.DateOfWarrantCommitment, new { @class = "control-label" })
			<div class="controls">
				<input type="text" name="DateOfWarrantCommitment" class="datepicker" data-date-format="dd-M-yyyy" >
				@Html.ValidationMessageFor(model => model.DateOfWarrantCommitment, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.DateOfRemand, new { @class = "control-label" })
			<div class="controls">
				<input type="text" name="DateOfRemand" class="datepicker" data-date-format="dd-M-yyyy" >
				@Html.ValidationMessageFor(model => model.DateOfRemand, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.Remarks, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Remarks)
				@Html.ValidationMessageFor(model => model.Remarks, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.HealthOnAdmission, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.HealthOnAdmission)
				@Html.ValidationMessageFor(model => model.HealthOnAdmission, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.WeightOnAdmission, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.WeightOnAdmission)
				@Html.ValidationMessageFor(model => model.WeightOnAdmission, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.KnownAilment, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.KnownAilment)
				@Html.ValidationMessageFor(model => model.KnownAilment, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group">
			@Html.LabelFor(model => model.CommunicableDisease, new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownList("DiseaseId", "-- Select Disease --")
				@Html.ValidationMessageFor(model => model.DiseaseId, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.ExplainedInjuries, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.ExplainedInjuries)
				@Html.ValidationMessageFor(model => model.ExplainedInjuries, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.UnexplainedInjuries, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.UnexplainedInjuries)
				@Html.ValidationMessageFor(model => model.UnexplainedInjuries, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.MedicalRemarks, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.MedicalRemarks)
				@Html.ValidationMessageFor(model => model.MedicalRemarks, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.DateOfRelease, new { @class = "control-label" })
			<div class="controls">
				<input type="text" name="DateOfRelease" class="datepicker" data-date-format="dd-M-yyyy" value="@Html.DisplayFor(model => model.DateOfRelease)">
				@Html.ValidationMessageFor(model => model.DateOfRelease, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.HealthOnRelease, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.HealthOnRelease)
				@Html.ValidationMessageFor(model => model.HealthOnRelease, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.WeightOnRelease, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.WeightOnRelease)
				@Html.ValidationMessageFor(model => model.WeightOnRelease, string.Empty, new { @class="help-inline" })
			</div>
		</div>

        <div class="control-group">
			<div class="controls">
				<input type="submit" value="Save" class="btn btn-primary" /> &nbsp; @Html.ActionLink("Cancel", "Index", new { PrisonerId = Request["PrisonerId"] })
			</div>
        </div>
    </fieldset>
}

@section Scripts {
	<script>
	$.validator.setDefaults({
            highlight: function (element) {
                $(element).closest(".control-group").addClass("error");
            },
            unhighlight: function (element) {
                $(element).closest(".control-group").removeClass("error");
            }
        });

		$('.datepicker').datepicker({autoclose: true});
	</script>
} 


