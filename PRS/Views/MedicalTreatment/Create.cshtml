@using BootstrapSupport
@model PRS.Models.MedicalTreatment 
@{
    ViewBag.Title = "New Treatment"; 
}
<h3>@ViewBag.Title</h3> 

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    <fieldset class="form-horizontal">
        <legend></legend>

        @Html.Hidden("PrisonerId", Request["PrisonerId"])
        @Html.HiddenFor(model => model.IsActive)

        <div class="control-group"> @Html.LabelFor(model => model.DateOfAdmission, new { @class = "control-label" })
			<div class="controls">
				<input type="text" name="DateOfAdmission" class="datepicker" data-date-format="dd-M-yyyy" value="@Html.DisplayFor(model => model.DateOfAdmission)">
				@Html.ValidationMessageFor(model => model.DateOfAdmission, "*", new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.DateOfDischarge, new { @class = "control-label" })
			<div class="controls">
				<input type="text" name="DateOfDischarge" class="datepicker" data-date-format="dd-M-yyyy" value="@Html.DisplayFor(model => model.DateOfDischarge)">
				@Html.ValidationMessageFor(model => model.DateOfDischarge, "", new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.Diagnosis, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Diagnosis)
				@Html.ValidationMessageFor(model => model.Diagnosis, "*", new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group">
			@Html.LabelFor(model => model.Disease, new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownList("DiseaseId", "-- Not Applicable --")
				@Html.ValidationMessageFor(model => model.DiseaseId, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.Treatment, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Treatment)
				@Html.ValidationMessageFor(model => model.Treatment, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group"> @Html.LabelFor(model => model.DietaryRequirements, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.DietaryRequirements)
				@Html.ValidationMessageFor(model => model.DietaryRequirements, string.Empty, new { @class="help-inline" })
			</div>
		</div>
        <div class="control-group">
			@Html.LabelFor(model => model.MedicalOfficer, new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownList("MedicalOfficerId", "-- Select Medical Officer --")
				@Html.ValidationMessageFor(model => model.MedicalOfficerId, "*", new { @class="help-inline" })
			</div>
		</div>

        <div class="control-group">
			<div class="controls">
				<input type="submit" value="Save" class="btn btn-primary" /> &nbsp; @Html.ActionLink("Cancel", "Index", new { PrisonerId = Request["PrisonerId"], UserType = Request["UserType"] })
			</div>
        </div>
    </fieldset>
}

@section Scripts {
	<script>
	$.validator.setDefaults({
            highlight: function (element) {
                $(element).closest(".control-group").addClass("error");
            },
            unhighlight: function (element) {
                $(element).closest(".control-group").removeClass("error");
            }
        });

		$('.datepicker').datepicker({autoclose: true});
	</script>
} 


